!function(e){var t={};function n(i){if(t[i])return t[i].exports;var a=t[i]={i:i,l:!1,exports:{}};return e[i].call(a.exports,a,a.exports,n),a.l=!0,a.exports}n.m=e,n.c=t,n.d=function(e,t,i){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:i})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var i=Object.create(null);if(n.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var a in e)n.d(i,a,function(t){return e[t]}.bind(null,a));return i},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=3)}([function(e,t,n){var i=n(8),a={};a.maze="\nxxxxxxxxxxxxxxxx\nx-x------------x\nx-x-xxxxxxxxxx-x\nx-x-x--------x-x\nx-x-x-xxxxxx-x-x\nx-x-x-x----x-x-x\nx-x-x-x-xx-x-x-x\nx-x-x-x--x-x-x-x\nx-x-x-x--x-x-x-x\nx-x-x-xxxx-x-x-x\nx-x-x------x-x-x\nx-x-xxxxxxxx-x-x\nx-x----------x-x\nx-xxxxxxxxxxxx-x\nx--------------x\nxxxxxxxxxxxxxxxx\n".split("\n").filter((function(e){return e})).map((function(e){return e.split("").map((function(e){return"x"===e?1:0}))})),a.spawn={x:1,y:1},a.end={x:8,y:8},a.path=i.getPath(a.maze,a.spawn,a.end);var r=new Image(100,100);r.src="../media/images/glowing-box.svg",a.tile=r,e.exports={getMap:function(){return a},getAstarPath:function(){return a.path.map((function(e){return{x:e.x,y:e.y}}))}}},function(e,t){function n(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}var i=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.name="pm-one",this.position={x:t,y:n},this.radius=3.5,this.shootTimer=0,this.damage=4,this.speed=1e3,this.cost=100,this.fired=!1,this.image=new Image(200,200),this.image.src="../media/images/turrets/pm-pink.svg",this.bullet=new Image(200,200),this.bullet.position={x:t,y:n},this.bullet.target=null,this.bullet.travelSpeed=180,this.bullet.src="../media/images/turrets/post-it-why.svg"}var t,i,a;return t=e,(i=[{key:"loadFromTemplate",value:function(e){var t=this;switch(this.name=e,"eskil"===e&&setInterval((function(){var e=Math.floor(2*Math.random());t.bullet.src=0===e?"../media/images/turrets/0.svg":"../media/images/turrets/1.svg"}),140),e){case"pm-two":this.radius=2.5,this.speed=330,this.damage=3,this.cost=150,this.bullet.travelSpeed=180,this.image.src="../media/images/turrets/pm-orange.svg",this.bullet.src="../media/images/turrets/post-it-information.svg";break;case"pm-three":this.radius=12,this.speed=3e3,this.damage=12,this.cost=200,this.bullet.src="../media/images/post-it-reflection.svg",this.image.src="../media/images/turrets/pm-green.svg";break;case"eskil":this.radius=7,this.speed=280,this.damage=10,this.cost=1e3,this.bullet.travelSpeed=160,this.bullet.src="../media/images/turrets/0.svg",this.image.src="../media/images/turrets/pm-eskil.svg"}}}])&&n(t.prototype,i),a&&n(t,a),e}();e.exports={Turret:i}},function(e,t){function n(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}var i=function(){function e(t,n,i){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.radius=.5,this.isAlive=!0,this.path=i,this.position={x:t,y:n},this.name="enemy",this.cash=1,this.speed=500,this.step=-1,this.isHit=!1,this.health=10,this.hpDamage=1,this.moveTimer=450,this.image=new Image(200,200),this.deathSound=new Audio("media/sounds/aha.wav"),this.deathSound.volume=.3}var t,i,a;return t=e,(i=[{key:"loadFromTemplate",value:function(e){switch(e){case"weak":this.cash=5,this.image.src="../media/images/enemies/student-blue.svg";break;case"medium":this.cash=10,this.speed=700,this.health=20,this.hpDamage=2,this.image.src="../media/images/enemies/student-pink.svg";break;case"hard":this.cash=15,this.speed=400,this.health=80,this.hpDamage=5,this.image.src="../media/images/enemies/student-orange.svg";break;case"fly":this.cash=12,this.speed=100,this.health=40,this.hpDamage=4,this.image.src="../media/images/enemies/student-purple.svg";break;case"boss":this.cash=40,this.speed=1200,this.health=500,this.hpDamage=10,this.image.src="../media/images/enemies/student-red.svg";break;case"mega-boss":this.cash=0,this.speed=1300,this.health=13e3,this.hpDamage=100,this.image.src="../media/images/enemies/student-red.svg"}}}])&&n(t.prototype,i),a&&n(t,a),e}();e.exports={Enemy:i}},function(e,t,n){e.exports=n(4)},function(e,t,n){"use strict";n.r(t);n(9),n(5);console.log("land")},function(e,t,n){"use strict";n.r(t);n(6);var i=n(1);function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(n,!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(n).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var o,u=n(7),l=n(0),c=l.getMap().tile,p=Math.floor(window.innerHeight/16),m=document.getElementById("canvas"),d=document.getElementById("turret-info"),h=document.getElementById("turret-pm-one"),x=document.getElementById("turret-pm-two"),y=document.getElementById("turret-pm-three"),f=document.getElementById("turret-eskil"),g=m.getContext("2d");m.width=window.innerHeight-16,m.height=window.innerHeight-16;var w=100,v=42,b=document.getElementById("cash"),k=document.getElementById("lives"),T=document.getElementById("start"),S=document.getElementById("level"),E=null,F=null,M={},O=new Audio("media/sounds/gestures.wav");O.loop=!0;var q=!1;b.innerHTML=w,k.innerHTML=v,T.addEventListener("click",(function(){T.disabled=!0,T.style.opacity=.3,O.play(),P.level++;var e="";switch(P.level){case 1:e="one";break;case 2:e="two";break;case 3:e="three";break;case 4:e="four";break;case 5:e="five";break;case 6:e="six";break;case 7:e="seven"}S.innerHTML=P.level,P.toSpawn=u.getLevels()[e].enemies})),h.addEventListener("click",(function(){I("pm-one")})),x.addEventListener("click",(function(){I("pm-two")})),y.addEventListener("click",(function(){I("pm-three")})),f.addEventListener("click",(function(){I("eskil")})),window.addEventListener("mousemove",(function(e){var t=P.turrets.filter((function(t){return t.position.x===H(L(m,e)).x&&t.position.y===H(L(m,e)).y}));F=0===t.length?null:t[0]}));var P={map:l.getMap().maze,enemies:[],turrets:[],toSpawn:[],clock:0,level:0};function I(e){(E=new i.Turret(0,0)).loadFromTemplate(e),function(e){var t="";switch(e.name){case"pm-one":t="Normal";break;case"pm-two":t="Fast";break;case"pm-three":t="Slow";break;case"eskil":t="Very fast"}document.getElementById("turret-info__damage").innerHTML="".concat(e.damage),document.getElementById("turret-info__speed").innerHTML="".concat(t),document.getElementById("turret-info__cost").innerHTML="".concat(e.cost," xp")}(E),d.style.visibility="visible",window.addEventListener("mousemove",(function(e){M=L(m,e)})),m.addEventListener("click",(function(){var e,t;E&&(e=H(M),t=E,1===P.map[e.y][e.x]&&!P.turrets.some((function(t){return t.position.x===e.x&&t.position.y===e.y}))&&w>=t.cost)?(!function(e){E.position=e,P.turrets.push(E),w-=E.cost,b.innerHTML=w}(H(M)),E=null,d.style.visibility="hidden"):(E=null,d.style.visibility="hidden")}))}function L(e,t){var n=e.getBoundingClientRect();return{x:t.clientX-n.left,y:t.clientY-n.top}}function j(e){var t=null,n=[];return P.enemies.forEach((function(i){var a=e.position.x-i.position.x,r=e.position.y-i.position.y;Math.sqrt(a*a+r*r)<=e.radius&&(n.push(i),t||(t=i),i.step>t.step&&(t=i))})),t}function H(e){return{x:Math.floor(e.x/p),y:Math.floor(e.y/p)}}function B(e){var t,n,i=r({},e);w>=1e3?(h.style.opacity=1,x.style.opacity=1,y.style.opacity=1,f.style.opacity=1):w>=200?(h.style.opacity=1,x.style.opacity=1,y.style.opacity=1,f.style.opacity=.3):w>=150?(h.style.opacity=1,x.style.opacity=1,y.style.opacity=.3,f.style.opacity=.3):w>=100?(h.style.opacity=1,x.style.opacity=.3,y.style.opacity=.3,f.style.opacity=.3):(h.style.opacity=.3,x.style.opacity=.3,y.style.opacity=.3,f.style.opacity=.3),i.toSpawn.forEach((function(e){e.spawnTimer>e.spawnFrequency?e.toSpawn.length>0&&(i.enemies.push(e.toSpawn.pop()),e.spawnTimer=0):e.spawnTimer+=window.performance.now()-i.clock}));for(var a=0;a<i.enemies.length;a++){var s=i.enemies[a];if(s.moveTimer>s.speed)if(s.step++,s.step<s.path.length-1){var u=s.path[s.step].x-s.position.x,l=s.path[s.step].y-s.position.y;anime({targets:s.position,x:s.position.x+u,y:s.position.y+l,duration:s.speed-1,easing:"linear"}),s.moveTimer=0}else v-=s.hpDamage,s.isAlive=!1,v<=0&&(t=void 0,n=void 0,t=document.createTextNode("You Lost"),(n=document.createElement("H1")).appendChild(t),n.classList.add("big-fat-text"),document.body.appendChild(n),window.cancelAnimationFrame(o),console.log(o),v=0),k.innerHTML=v;else s.moveTimer+=window.performance.now()-i.clock}i.enemies=i.enemies.filter((function(e){return e.isAlive}));for(var c=function(e){var t=i.turrets[e];i.enemies.length>0&&(t.target=j(t)),t.target&&!t.target.isAlive&&(t.target=null),t.shootTimer>t.speed&&t.target?(t.target.isHit=!0,t.fired=!0,t.bullet.target=r({},t.target.position),setTimeout((function(){t.target.health-=t.damage,t.fired=!1,t.target.health<=0&&(t.target.isAlive=!1,q||(t.target.deathSound.play(),q=!0,setTimeout((function(){q=!1}),2e3)),w+=t.target.cash,b.innerHTML=w,t.target=null)}),t.bullet.travelSpeed),setTimeout((function(){t.bullet.position=r({},t.position),t.bullet.target=null}),t.bullet.travelSpeed+100),t.shootTimer=0):t.shootTimer+=window.performance.now()-i.clock},p=0;p<i.turrets.length;p++)c(p);return i.enemies=i.enemies.filter((function(e){return e.isAlive})),i.enemies.length||("seven"===i.level&&function(){var e=document.createTextNode("You Won"),t=document.createElement("H1");t.appendChild(e),t.classList.add("big-fat-text"),document.body.appendChild(t)}(),T.disabled=!1,T.style.opacity=1),i.clock=window.performance.now(),i}!function e(){P=B(P),g.clearRect(0,0,m.width,m.height),P.map.forEach((function(e,t){e.forEach((function(e,n){switch(e){case 0:g.fillStyle="rgba(0,0,0,0)",g.fillRect(n*p,t*p,p,p);break;case 1:g.drawImage(c,n*p,t*p,p,p);break;case 2:g.fillStyle="salmon",g.fillRect(n*p,t*p,p,p)}}))}));for(var t=0;t<P.enemies.length;t++){var n=P.enemies[t];g.drawImage(n.image,n.position.x*p,n.position.y*p,p,p)}for(var i=0;i<P.turrets.length;i++){var a=P.turrets[i];g.drawImage(a.image,a.position.x*p+3,a.position.y*p+3,.9*p,.9*p),a.bullet.target&&(g.drawImage(a.bullet,a.bullet.position.x*p,a.bullet.position.y*p,.5*p,.5*p),anime({targets:a.bullet.position,x:a.bullet.target.x,y:a.bullet.target.y,duration:a.bullet.travelSpeed-130,easing:"linear"}))}F&&(g.beginPath(),g.fillStyle="#00000044",g.arc(F.position.x*p+p/2,F.position.y*p+p/2,F.radius*p,0,2*Math.PI),g.fill()),E&&(g.beginPath(),g.fillStyle="#00000044",g.arc(M.x,M.y,E.radius*p,0,2*Math.PI),g.fill()),o=window.requestAnimationFrame(e)}()},function(e,t,n){},function(e,t,n){"use strict";n.r(t),n.d(t,"getLevels",(function(){return l}));var i,a=n(2);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var s=n(0).getAstarPath(),o=(r(i={one:{enemies:[{type:"weak",spawnFrequency:1800,spawnTimer:1e3,toSpawn:u("weak",20)}],reward:50},two:{enemies:[{type:"weak",spawnFrequency:2e3,spawnTimer:0,toSpawn:u("weak",20)},{type:"medium",spawnFrequency:3e3,spawnTimer:-5e3,toSpawn:u("medium",15)}]},three:{enemies:[{type:"weak",spawnFrequency:2e3,spawnTimer:-3e3,toSpawn:u("weak",20)},{type:"medium",spawnFrequency:2e3,spawnTimer:1e3,toSpawn:u("medium",35)},{type:"hard",spawnFrequency:2500,spawnTimer:-1e4,toSpawn:u("hard",20)}]},four:{enemies:[{type:"weak",spawnFrequency:1e3,spawnTimer:-25e3,toSpawn:u("weak",10)},{type:"medium",spawnFrequency:5e3,spawnTimer:1e3,toSpawn:u("medium",8)},{type:"medium",spawnFrequency:300,spawnTimer:-1500,toSpawn:u("medium",10)},{type:"hard",spawnFrequency:2e3,spawnTimer:1e3,toSpawn:u("hard",20)}]}},"four",{enemies:[{type:"weak",spawnFrequency:100,spawnTimer:0,toSpawn:u("weak",50)},{type:"weak",spawnFrequency:100,spawnTimer:-8e3,toSpawn:u("weak",50)},{type:"weak",spawnFrequency:100,spawnTimer:-16e3,toSpawn:u("weak",50)},{type:"weak",spawnFrequency:100,spawnTimer:-21e3,toSpawn:u("weak",50)},{type:"medium",spawnFrequency:2e3,spawnTimer:1e3,toSpawn:u("medium",30)}]}),r(i,"five",{enemies:[{spawnFrequency:500,spawnTimer:-6e3,toSpawn:u("medium",40)},{spawnFrequency:1e3,spawnTimer:-1e3,toSpawn:u("fly",40)},{spawnFrequency:1e3,spawnTimer:-15e3,toSpawn:u("fly",40)},{spawnFrequency:2500,spawnTimer:1e3,toSpawn:u("hard",40)}]}),r(i,"six",{enemies:[{spawnFrequency:1500,spawnTimer:2400,toSpawn:u("fly",50)},{spawnFrequency:5e3,spawnTimer:1e3,toSpawn:u("boss",20)}]}),r(i,"seven",{enemies:[{spawnFrequency:1e3,spawnTimer:0,toSpawn:u("mega-boss",1)}]}),i);function u(e,t){for(var n=[],i=0;i<t;i++){var r=new a.Enemy(1,1,s);r.loadFromTemplate(e),n.push(r)}return n}function l(){return o}},function(e,t){function n(e,t){return e.x===t.x&&e.y===t.y}function i(e,t){for(var i=0;i<e.length;i++)if(n(t,e[i]))return t}function a(e,t){var n=[];return e[t.y-1][t.x]&&n.push(e[t.y-1][t.x]),e[t.y+1][t.x]&&n.push(e[t.y+1][t.x]),e[t.y][t.x-1]&&n.push(e[t.y][t.x-1]),e[t.y][t.x+1]&&n.push(e[t.y][t.x+1]),n}e.exports={getPath:function(e,t,r){e=function(e){return e.map((function(e,t){return e.map((function(e,n){return{x:n,y:t,isWall:e}}))}))}(e);var s,o,u=[],l=[];for(u.push(t);u.length;){for(var c=0,p=0;p<u.length;p++)u[p].f<u[c].f&&(c=p);var m=u[c];if(n(m,r)){for(var d=[],h=m;h.parent;)d.push(h),h=h.parent;return d.reverse()}u.splice(c,1),l.push(m);for(var x=a(e,m),y=m.g+1,f=0;f<x.length;f++){var g=x[f],w=i(l,g);if(!g.isWall&&!w){var v=!1;i(u,g)||(v=!0,g.h=(s=g,o=r,Math.abs(s.x-o.x)+Math.abs(s.y-o.y)),u.push(g)),y<g.g&&(v=!0),v&&(g.parent=m,g.g=y,g.f=g.g+g.h)}}}return[]}}},function(e,t,n){}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vc3JjL3NjcmlwdHMvbWFwLmpzIiwid2VicGFjazovLy8uL3NyYy9zY3JpcHRzL3R1cnJldC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvc2NyaXB0cy9lbmVteS5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvc2NyaXB0cy9sYW5kaW5nLXBhZ2UuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3NjcmlwdHMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3NjcmlwdHMvbGV2ZWxzLmpzIiwid2VicGFjazovLy8uL3NyYy9zY3JpcHRzL2FzdGFyLmpzIl0sIm5hbWVzIjpbImluc3RhbGxlZE1vZHVsZXMiLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJleHBvcnRzIiwibW9kdWxlIiwiaSIsImwiLCJtb2R1bGVzIiwiY2FsbCIsIm0iLCJjIiwiZCIsIm5hbWUiLCJnZXR0ZXIiLCJvIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiciIsIlN5bWJvbCIsInRvU3RyaW5nVGFnIiwidmFsdWUiLCJ0IiwibW9kZSIsIl9fZXNNb2R1bGUiLCJucyIsImNyZWF0ZSIsImtleSIsImJpbmQiLCJuIiwib2JqZWN0IiwicHJvcGVydHkiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsInAiLCJzIiwiYXN0YXIiLCJyZXF1aXJlIiwibWFwIiwibWF6ZSIsInNwbGl0IiwiZmlsdGVyIiwicm93IiwiY29sIiwic3Bhd24iLCJ4IiwieSIsImVuZCIsInBhdGgiLCJnZXRQYXRoIiwidGlsZSIsIkltYWdlIiwic3JjIiwiZ2V0TWFwIiwiZ2V0QXN0YXJQYXRoIiwiVHVycmV0IiwidGhpcyIsInBvc2l0aW9uIiwicmFkaXVzIiwic2hvb3RUaW1lciIsImRhbWFnZSIsInNwZWVkIiwiY29zdCIsImZpcmVkIiwiaW1hZ2UiLCJidWxsZXQiLCJ0YXJnZXQiLCJ0cmF2ZWxTcGVlZCIsInRlbXBsYXRlIiwic2V0SW50ZXJ2YWwiLCJyYW5kIiwiTWF0aCIsImZsb29yIiwicmFuZG9tIiwiRW5lbXkiLCJpc0FsaXZlIiwiY2FzaCIsInN0ZXAiLCJpc0hpdCIsImhlYWx0aCIsImhwRGFtYWdlIiwibW92ZVRpbWVyIiwiZGVhdGhTb3VuZCIsIkF1ZGlvIiwidm9sdW1lIiwiY29uc29sZSIsImxvZyIsImFuaW1hdGlvbkZyYW1lIiwiX2xldmVscyIsIl9tYXAiLCJ0aWxlX1dBTEwiLCJ0cyIsIndpbmRvdyIsImlubmVySGVpZ2h0IiwiY2FudmFzIiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50QnlJZCIsInR1cnJldEluZm8iLCJidXlQbU9uZSIsImJ1eVBtVHdvIiwiYnV5UG1UaHJlZSIsImJ1eUVza2lsIiwiY29udGV4dCIsImdldENvbnRleHQiLCJ3aWR0aCIsImhlaWdodCIsImxpdmVzIiwiZG9tQ2FzaCIsImRvbUxpdmVzIiwiYnRuUGxheSIsImRvbUxldmVsIiwiYnV5aW5nVHVyciIsImhvdmVyZWRUdXJyZXQiLCJtb3VzZVBvcyIsImJhY2tncm91bmRTb3VuZCIsImxvb3AiLCJpc2RlYXRoU291bmRwbGF5aW5nIiwiaW5uZXJIVE1MIiwiYWRkRXZlbnRMaXN0ZW5lciIsImRpc2FibGVkIiwic3R5bGUiLCJvcGFjaXR5IiwicGxheSIsInN0YXRlIiwibGV2ZWwiLCJuZXh0THZsIiwidG9TcGF3biIsImdldExldmVscyIsImVuZW1pZXMiLCJidXlOZXdUdXJyZXQiLCJlIiwiaG92ZXJlZFR1cnJldHMiLCJ0dXJyZXRzIiwiZ2V0VGlsZVBvcyIsImdldE1vdXNlUG9zIiwibGVuZ3RoIiwiY2xvY2siLCJ0eXBlIiwibG9hZEZyb21UZW1wbGF0ZSIsInR1cnJldCIsImxvYWRTdG9yZUluZm8iLCJ2aXNpYmlsaXR5IiwiZXZ0IiwicG9zIiwic29tZSIsInB1c2giLCJwbGFjZU5ld1Rvd2VyIiwicmVjdCIsImdldEJvdW5kaW5nQ2xpZW50UmVjdCIsImNsaWVudFgiLCJsZWZ0IiwiY2xpZW50WSIsInRvcCIsImdldFR1cnJldFRhcmdldCIsIndpdGhpblJhZGl1cyIsImZvckVhY2giLCJkWCIsImRZIiwic3FydCIsIm1Qb3MiLCJnZXRTdGF0ZSIsIm9sZFN0YXRlIiwidHh0IiwiaDEiLCJzcGF3blRpbWVyIiwic3Bhd25GcmVxdWVuY3kiLCJwb3AiLCJwZXJmb3JtYW5jZSIsIm5vdyIsImVuZW15IiwiZHgiLCJkeSIsImFuaW1lIiwidGFyZ2V0cyIsImR1cmF0aW9uIiwiZWFzaW5nIiwiY3JlYXRlVGV4dE5vZGUiLCJjcmVhdGVFbGVtZW50IiwiYXBwZW5kQ2hpbGQiLCJjbGFzc0xpc3QiLCJhZGQiLCJib2R5IiwiY2FuY2VsQW5pbWF0aW9uRnJhbWUiLCJzZXRUaW1lb3V0Iiwid2luIiwicmVuZGVyIiwiY2xlYXJSZWN0IiwiZmlsbFN0eWxlIiwiZmlsbFJlY3QiLCJkcmF3SW1hZ2UiLCJiZWdpblBhdGgiLCJhcmMiLCJQSSIsImZpbGwiLCJyZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJsZXZlbHMiLCJvbmUiLCJsb2FkIiwicmV3YXJkIiwidHdvIiwidGhyZWUiLCJmb3VyIiwiYW1vdW50Iiwibm9kZUlzRXF1YWwiLCJhIiwiYiIsImZpbmROb2RlIiwibm9kZUxpc3QiLCJub2RlIiwiZ2V0TmVpZ2hib3VycyIsIm5laWdoYm91cnMiLCJzdGFydCIsImdvYWwiLCJpc1dhbGwiLCJjb252ZXJ0TWF6ZSIsIm9wZW4iLCJjbG9zZWQiLCJjdXJyZW50SW5kZXgiLCJmIiwiY3VycmVudCIsImN1cnIiLCJwYXJlbnQiLCJyZXZlcnNlIiwic3BsaWNlIiwiZ1Njb3JlIiwiZyIsIm5laWdoYm91ciIsImlzQ2xvc2VkIiwiZ1Njb3JlSXNCZXN0IiwiaCIsImFicyJdLCJtYXBwaW5ncyI6ImFBQ0UsSUFBSUEsRUFBbUIsR0FHdkIsU0FBU0MsRUFBb0JDLEdBRzVCLEdBQUdGLEVBQWlCRSxHQUNuQixPQUFPRixFQUFpQkUsR0FBVUMsUUFHbkMsSUFBSUMsRUFBU0osRUFBaUJFLEdBQVksQ0FDekNH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QUFLK0osSUFBSTFCLEVBQUUvSixFQUFJZ0ssRUFBRWhLLEdBQUswQixLQUFLK0osSUFBSTFCLEVBQUU5SixFQUFJK0osRUFBRS9KLElBZ0d4Q3lLLEVBQUt0RSxLQUFLaUYsSUFFUkYsRUFBU0UsRUFBVUQsSUFDckJHLEdBQWUsR0FHYkEsSUFDRkYsRUFBVUwsT0FBU0YsRUFDbkJPLEVBQVVELEVBQUlELEVBQ2RFLEVBQVVSLEVBQUlRLEVBQVVELEVBQUlDLEVBQVVHLEtBSTVDLE1BQU8sTSIsImZpbGUiOiJzY3JpcHQubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiIFx0Ly8gVGhlIG1vZHVsZSBjYWNoZVxuIFx0dmFyIGluc3RhbGxlZE1vZHVsZXMgPSB7fTtcblxuIFx0Ly8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbiBcdGZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblxuIFx0XHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcbiBcdFx0aWYoaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0pIHtcbiBcdFx0XHRyZXR1cm4gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0uZXhwb3J0cztcbiBcdFx0fVxuIFx0XHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuIFx0XHR2YXIgbW9kdWxlID0gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0gPSB7XG4gXHRcdFx0aTogbW9kdWxlSWQsXG4gXHRcdFx0bDogZmFsc2UsXG4gXHRcdFx0ZXhwb3J0czoge31cbiBcdFx0fTtcblxuIFx0XHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cbiBcdFx0bW9kdWxlc1ttb2R1bGVJZF0uY2FsbChtb2R1bGUuZXhwb3J0cywgbW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cbiBcdFx0Ly8gRmxhZyB0aGUgbW9kdWxlIGFzIGxvYWRlZFxuIFx0XHRtb2R1bGUubCA9IHRydWU7XG5cbiBcdFx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcbiBcdFx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xuIFx0fVxuXG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm0gPSBtb2R1bGVzO1xuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZSBjYWNoZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5jID0gaW5zdGFsbGVkTW9kdWxlcztcblxuIFx0Ly8gZGVmaW5lIGdldHRlciBmdW5jdGlvbiBmb3IgaGFybW9ueSBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSBmdW5jdGlvbihleHBvcnRzLCBuYW1lLCBnZXR0ZXIpIHtcbiBcdFx0aWYoIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBuYW1lKSkge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBuYW1lLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZ2V0dGVyIH0pO1xuIFx0XHR9XG4gXHR9O1xuXG4gXHQvLyBkZWZpbmUgX19lc01vZHVsZSBvbiBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIgPSBmdW5jdGlvbihleHBvcnRzKSB7XG4gXHRcdGlmKHR5cGVvZiBTeW1ib2wgIT09ICd1bmRlZmluZWQnICYmIFN5bWJvbC50b1N0cmluZ1RhZykge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBTeW1ib2wudG9TdHJpbmdUYWcsIHsgdmFsdWU6ICdNb2R1bGUnIH0pO1xuIFx0XHR9XG4gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG4gXHR9O1xuXG4gXHQvLyBjcmVhdGUgYSBmYWtlIG5hbWVzcGFjZSBvYmplY3RcbiBcdC8vIG1vZGUgJiAxOiB2YWx1ZSBpcyBhIG1vZHVsZSBpZCwgcmVxdWlyZSBpdFxuIFx0Ly8gbW9kZSAmIDI6IG1lcmdlIGFsbCBwcm9wZXJ0aWVzIG9mIHZhbHVlIGludG8gdGhlIG5zXG4gXHQvLyBtb2RlICYgNDogcmV0dXJuIHZhbHVlIHdoZW4gYWxyZWFkeSBucyBvYmplY3RcbiBcdC8vIG1vZGUgJiA4fDE6IGJlaGF2ZSBsaWtlIHJlcXVpcmVcbiBcdF9fd2VicGFja19yZXF1aXJlX18udCA9IGZ1bmN0aW9uKHZhbHVlLCBtb2RlKSB7XG4gXHRcdGlmKG1vZGUgJiAxKSB2YWx1ZSA9IF9fd2VicGFja19yZXF1aXJlX18odmFsdWUpO1xuIFx0XHRpZihtb2RlICYgOCkgcmV0dXJuIHZhbHVlO1xuIFx0XHRpZigobW9kZSAmIDQpICYmIHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcgJiYgdmFsdWUgJiYgdmFsdWUuX19lc01vZHVsZSkgcmV0dXJuIHZhbHVlO1xuIFx0XHR2YXIgbnMgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIobnMpO1xuIFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkobnMsICdkZWZhdWx0JywgeyBlbnVtZXJhYmxlOiB0cnVlLCB2YWx1ZTogdmFsdWUgfSk7XG4gXHRcdGlmKG1vZGUgJiAyICYmIHR5cGVvZiB2YWx1ZSAhPSAnc3RyaW5nJykgZm9yKHZhciBrZXkgaW4gdmFsdWUpIF9fd2VicGFja19yZXF1aXJlX18uZChucywga2V5LCBmdW5jdGlvbihrZXkpIHsgcmV0dXJuIHZhbHVlW2tleV07IH0uYmluZChudWxsLCBrZXkpKTtcbiBcdFx0cmV0dXJuIG5zO1xuIFx0fTtcblxuIFx0Ly8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubiA9IGZ1bmN0aW9uKG1vZHVsZSkge1xuIFx0XHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cbiBcdFx0XHRmdW5jdGlvbiBnZXREZWZhdWx0KCkgeyByZXR1cm4gbW9kdWxlWydkZWZhdWx0J107IH0gOlxuIFx0XHRcdGZ1bmN0aW9uIGdldE1vZHVsZUV4cG9ydHMoKSB7IHJldHVybiBtb2R1bGU7IH07XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsICdhJywgZ2V0dGVyKTtcbiBcdFx0cmV0dXJuIGdldHRlcjtcbiBcdH07XG5cbiBcdC8vIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbFxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5vID0gZnVuY3Rpb24ob2JqZWN0LCBwcm9wZXJ0eSkgeyByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iamVjdCwgcHJvcGVydHkpOyB9O1xuXG4gXHQvLyBfX3dlYnBhY2tfcHVibGljX3BhdGhfX1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5wID0gXCJcIjtcblxuXG4gXHQvLyBMb2FkIGVudHJ5IG1vZHVsZSBhbmQgcmV0dXJuIGV4cG9ydHNcbiBcdHJldHVybiBfX3dlYnBhY2tfcmVxdWlyZV9fKF9fd2VicGFja19yZXF1aXJlX18ucyA9IDMpO1xuIiwiY29uc3QgYXN0YXIgPSByZXF1aXJlKCcuL2FzdGFyJyk7XG5cbmNvbnN0IG1hcFN0cmluZyA9IGBcbnh4eHh4eHh4eHh4eHh4eHhcbngteC0tLS0tLS0tLS0tLXhcbngteC14eHh4eHh4eHh4LXhcbngteC14LS0tLS0tLS14LXhcbngteC14LXh4eHh4eC14LXhcbngteC14LXgtLS0teC14LXhcbngteC14LXgteHgteC14LXhcbngteC14LXgtLXgteC14LXhcbngteC14LXgtLXgteC14LXhcbngteC14LXh4eHgteC14LXhcbngteC14LS0tLS0teC14LXhcbngteC14eHh4eHh4eC14LXhcbngteC0tLS0tLS0tLS14LXhcbngteHh4eHh4eHh4eHh4LXhcbngtLS0tLS0tLS0tLS0tLXhcbnh4eHh4eHh4eHh4eHh4eHhcbmA7XG4vLyBDb252ZXJ0IGludG8gYXJyYXkgbWF0cml4XG5cbmxldCBtYXAgPSB7fTtcblxubWFwLm1hemUgPSBtYXBTdHJpbmdcbiAgLnNwbGl0KCdcXG4nKVxuICAuZmlsdGVyKHJvdyA9PiByb3cpXG4gIC5tYXAocm93ID0+IHtcbiAgICByZXR1cm4gcm93LnNwbGl0KCcnKS5tYXAoY29sID0+IChjb2wgPT09ICd4JyA/IDEgOiAwKSk7XG4gIH0pO1xuXG5tYXAuc3Bhd24gPSB7XG4gIHg6IDEsXG4gIHk6IDEsXG59XG5cbm1hcC5lbmQgPSB7XG4gIHg6IDgsXG4gIHk6IDgsXG59XG5cbm1hcC5wYXRoID0gYXN0YXIuZ2V0UGF0aChcbiAgbWFwLm1hemUsIG1hcC5zcGF3biwgbWFwLmVuZFxuKTtcblxuY29uc3QgdGlsZSA9IG5ldyBJbWFnZSgxMDAsMTAwKVxudGlsZS5zcmMgPSAoJy4uL21lZGlhL2ltYWdlcy9nbG93aW5nLWJveC5zdmcnKVxuXG5tYXAudGlsZSA9IHRpbGVcblxuXG5mdW5jdGlvbiBnZXRNYXAoKSB7XG4gIHJldHVybiBtYXA7XG59XG5cbmZ1bmN0aW9uIGdldEFzdGFyUGF0aCgpIHtcbiAgcmV0dXJuIG1hcC5wYXRoLm1hcChvID0+IHtcbiAgICByZXR1cm4ge1xuICAgICAgeDogby54LFxuICAgICAgeTogby55XG4gICAgfVxuICB9KVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgZ2V0TWFwOiBnZXRNYXAsXG4gIGdldEFzdGFyUGF0aDogZ2V0QXN0YXJQYXRoXG5cbn07IiwiIC8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAjNSAqL1xuXG4gY2xhc3MgVHVycmV0IHtcbiAgICAgY29uc3RydWN0b3IoeCwgeSkge1xuICAgICAgICAgdGhpcy5uYW1lID0gJ3BtLW9uZSdcbiAgICAgICAgIHRoaXMucG9zaXRpb24gPSB7XG4gICAgICAgICAgICAgeDogeCxcbiAgICAgICAgICAgICB5OiB5LFxuICAgICAgICAgfVxuXG4gICAgICAgICB0aGlzLnJhZGl1cyA9IDMuNTtcbiAgICAgICAgIHRoaXMuc2hvb3RUaW1lciA9IDBcbiAgICAgICAgIHRoaXMuZGFtYWdlID0gNFxuICAgICAgICAgdGhpcy5zcGVlZCA9IDEwMDBcbiAgICAgICAgIHRoaXMuY29zdCA9IDEwMFxuICAgICAgICAgdGhpcy5maXJlZCA9IGZhbHNlXG5cbiAgICAgICAgIHRoaXMuaW1hZ2UgPSBuZXcgSW1hZ2UoMjAwLCAyMDApXG4gICAgICAgICB0aGlzLmltYWdlLnNyYyA9ICcuLi9tZWRpYS9pbWFnZXMvdHVycmV0cy9wbS1waW5rLnN2ZydcblxuICAgICAgICAgdGhpcy5idWxsZXQgPSBuZXcgSW1hZ2UoMjAwLCAyMDApXG4gICAgICAgICB0aGlzLmJ1bGxldC5wb3NpdGlvbiA9IHtcbiAgICAgICAgICAgICB4OiB4LFxuICAgICAgICAgICAgIHk6IHksXG4gICAgICAgICB9XG4gICAgICAgICB0aGlzLmJ1bGxldC50YXJnZXQgPSBudWxsXG4gICAgICAgICB0aGlzLmJ1bGxldC50cmF2ZWxTcGVlZCA9IDE4MDtcbiAgICAgICAgIHRoaXMuYnVsbGV0LnNyYyA9ICcuLi9tZWRpYS9pbWFnZXMvdHVycmV0cy9wb3N0LWl0LXdoeS5zdmcnXG4gICAgIH1cbiAgICAgbG9hZEZyb21UZW1wbGF0ZSh0ZW1wbGF0ZSkge1xuICAgICAgICAgdGhpcy5uYW1lID0gdGVtcGxhdGVcbiAgICAgICAgIGlmKHRlbXBsYXRlID09PSAnZXNraWwnKXtcbiAgICAgICAgICAgIHNldEludGVydmFsKCgpID0+IHtcblxuICAgICAgICAgICAgICAgIGxldCByYW5kID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpKjIpXG4gICAgICAgICAgICAgICAgcmFuZCA9PT0gMD8gIHRoaXMuYnVsbGV0LnNyYyA9ICcuLi9tZWRpYS9pbWFnZXMvdHVycmV0cy8wLnN2ZycgOiAgdGhpcy5idWxsZXQuc3JjID0gJy4uL21lZGlhL2ltYWdlcy90dXJyZXRzLzEuc3ZnJ1xuICAgICAgICAgICAgIH0sIDE0MClcbiAgICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgICBzd2l0Y2ggKHRlbXBsYXRlKSB7XG4gICAgICAgICAgICAgY2FzZSAncG0tdHdvJzpcbiAgICAgICAgICAgICAgICAgdGhpcy5yYWRpdXMgPSAyLjVcbiAgICAgICAgICAgICAgICAgdGhpcy5zcGVlZCA9IDMzMFxuICAgICAgICAgICAgICAgICB0aGlzLmRhbWFnZSA9IDNcbiAgICAgICAgICAgICAgICAgdGhpcy5jb3N0ID0gMTUwXG4gICAgICAgICAgICAgICAgIHRoaXMuYnVsbGV0LnRyYXZlbFNwZWVkID0gMTgwO1xuICAgICAgICAgICAgICAgICB0aGlzLmltYWdlLnNyYyA9ICcuLi9tZWRpYS9pbWFnZXMvdHVycmV0cy9wbS1vcmFuZ2Uuc3ZnJ1xuICAgICAgICAgICAgICAgICB0aGlzLmJ1bGxldC5zcmMgPSAnLi4vbWVkaWEvaW1hZ2VzL3R1cnJldHMvcG9zdC1pdC1pbmZvcm1hdGlvbi5zdmcnXG4gICAgICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICAgY2FzZSAncG0tdGhyZWUnOlxuICAgICAgICAgICAgICAgICB0aGlzLnJhZGl1cyA9IDEyXG4gICAgICAgICAgICAgICAgIHRoaXMuc3BlZWQgPSAzMDAwXG4gICAgICAgICAgICAgICAgIHRoaXMuZGFtYWdlID0gMTJcbiAgICAgICAgICAgICAgICAgdGhpcy5jb3N0ID0gMjAwXG4gICAgICAgICAgICAgICAgIHRoaXMuYnVsbGV0LnNyYyA9ICcuLi9tZWRpYS9pbWFnZXMvcG9zdC1pdC1yZWZsZWN0aW9uLnN2ZydcbiAgICAgICAgICAgICAgICAgdGhpcy5pbWFnZS5zcmMgPSAnLi4vbWVkaWEvaW1hZ2VzL3R1cnJldHMvcG0tZ3JlZW4uc3ZnJ1xuICAgICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgIGNhc2UgJ2Vza2lsJzpcbiAgICAgICAgICAgICAgICAgdGhpcy5yYWRpdXMgPSA3XG4gICAgICAgICAgICAgICAgIHRoaXMuc3BlZWQgPSAyODBcbiAgICAgICAgICAgICAgICAgdGhpcy5kYW1hZ2UgPSAxMFxuICAgICAgICAgICAgICAgICB0aGlzLmNvc3QgPSAxMDAwXG4gICAgICAgICAgICAgICAgIHRoaXMuYnVsbGV0LnRyYXZlbFNwZWVkID0gMTYwO1xuICAgICAgICAgICAgICAgICB0aGlzLmJ1bGxldC5zcmMgPSAnLi4vbWVkaWEvaW1hZ2VzL3R1cnJldHMvMC5zdmcnXG4gICAgICAgICAgICAgICAgIHRoaXMuaW1hZ2Uuc3JjID0gJy4uL21lZGlhL2ltYWdlcy90dXJyZXRzL3BtLWVza2lsLnN2ZydcblxuICAgICAgICAgfVxuICAgICB9XG4gfVxuXG4gbW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgIFR1cnJldFxuIH0iLCIgLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICM0ICovXG5cbiBjbGFzcyBFbmVteSB7XG4gICAgIGNvbnN0cnVjdG9yKHgsIHksIHBhdGgpIHtcbiAgICAgICAgIC8vIHRoaXMuY29sb3IgPSBbMCwgMCwgMF07XG4gICAgICAgICB0aGlzLnJhZGl1cyA9IDAuNTsgLy8gcmFkaXVzIGluIHRpbGVzXG4gICAgICAgICB0aGlzLmlzQWxpdmUgPSB0cnVlO1xuICAgICAgICAgdGhpcy5wYXRoID0gcGF0aDtcblxuICAgICAgICAgdGhpcy5wb3NpdGlvbiA9IHtcbiAgICAgICAgICAgICB4OiB4LFxuICAgICAgICAgICAgIHk6IHksXG4gICAgICAgICB9XG5cbiAgICAgICAgIHRoaXMubmFtZSA9ICdlbmVteSc7XG4gICAgICAgICB0aGlzLmNhc2ggPSAxO1xuICAgICAgICAgdGhpcy5zcGVlZCA9IDUwMDtcbiAgICAgICAgIHRoaXMuc3RlcCA9IC0xO1xuICAgICAgICAgdGhpcy5pc0hpdCA9IGZhbHNlO1xuXG4gICAgICAgICAvLyB0aGlzLnRzID0gdHM7XG4gICAgICAgICB0aGlzLmhlYWx0aCA9IDEwO1xuICAgICAgICAgdGhpcy5ocERhbWFnZSA9IDE7XG4gICAgICAgICB0aGlzLm1vdmVUaW1lciA9IDQ1MDtcblxuICAgICAgICAgLy8gdGhpcy50ZW1wbGF0ZSA9IHRlbXBsYXRlXG4gICAgICAgICB0aGlzLmltYWdlID0gbmV3IEltYWdlKDIwMCwgMjAwKVxuICAgICAgICAgdGhpcy5kZWF0aFNvdW5kID0gbmV3IEF1ZGlvKFwibWVkaWEvc291bmRzL2FoYS53YXZcIilcbiAgICAgICAgIHRoaXMuZGVhdGhTb3VuZC52b2x1bWUgPSAwLjM7XG5cbiAgICAgICAgIC8vIHRoaXMuaW1hZ2UgPSBzay5sb2FkSW1hZ2UoJy4uL21lZGlhL2ltYWdlcy9yYWluYm93LmpwZycpXG4gICAgIH1cblxuICAgICBsb2FkRnJvbVRlbXBsYXRlKHRlbXBsYXRlKSB7XG4gICAgICAgICBzd2l0Y2ggKHRlbXBsYXRlKSB7XG4gICAgICAgICAgICAgY2FzZSAnd2Vhayc6XG4gICAgICAgICAgICAgICAgIC8vQ0hBTkdFIENBU0hcbiAgICAgICAgICAgICAgICAgdGhpcy5jYXNoID0gNTtcbiAgICAgICAgICAgICAgICAgdGhpcy5pbWFnZS5zcmMgPSAnLi4vbWVkaWEvaW1hZ2VzL2VuZW1pZXMvc3R1ZGVudC1ibHVlLnN2ZydcbiAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgY2FzZSAnbWVkaXVtJzpcbiAgICAgICAgICAgICAgICAgdGhpcy5jYXNoID0gMTA7XG4gICAgICAgICAgICAgICAgIHRoaXMuc3BlZWQgPSA3MDA7XG4gICAgICAgICAgICAgICAgIHRoaXMuaGVhbHRoID0gMjA7XG4gICAgICAgICAgICAgICAgIHRoaXMuaHBEYW1hZ2UgPSAyO1xuICAgICAgICAgICAgICAgICB0aGlzLmltYWdlLnNyYyA9ICcuLi9tZWRpYS9pbWFnZXMvZW5lbWllcy9zdHVkZW50LXBpbmsuc3ZnJ1xuICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICBjYXNlICdoYXJkJzpcbiAgICAgICAgICAgICAgICAgdGhpcy5jYXNoID0gMTU7XG4gICAgICAgICAgICAgICAgIHRoaXMuc3BlZWQgPSA0MDA7XG4gICAgICAgICAgICAgICAgIHRoaXMuaGVhbHRoID0gODA7XG4gICAgICAgICAgICAgICAgIHRoaXMuaHBEYW1hZ2UgPSA1O1xuICAgICAgICAgICAgICAgICB0aGlzLmltYWdlLnNyYyA9ICcuLi9tZWRpYS9pbWFnZXMvZW5lbWllcy9zdHVkZW50LW9yYW5nZS5zdmcnXG4gICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgIGNhc2UgJ2ZseSc6XG4gICAgICAgICAgICAgICAgIHRoaXMuY2FzaCA9IDEyO1xuICAgICAgICAgICAgICAgICB0aGlzLnNwZWVkID0gMTAwO1xuICAgICAgICAgICAgICAgICB0aGlzLmhlYWx0aCA9IDQwO1xuICAgICAgICAgICAgICAgICB0aGlzLmhwRGFtYWdlID0gNDtcbiAgICAgICAgICAgICAgICAgdGhpcy5pbWFnZS5zcmMgPSAnLi4vbWVkaWEvaW1hZ2VzL2VuZW1pZXMvc3R1ZGVudC1wdXJwbGUuc3ZnJ1xuICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICBjYXNlICdib3NzJzpcbiAgICAgICAgICAgICAgICAgdGhpcy5jYXNoID0gNDA7XG4gICAgICAgICAgICAgICAgIHRoaXMuc3BlZWQgPSAxMjAwO1xuICAgICAgICAgICAgICAgICB0aGlzLmhlYWx0aCA9IDUwMDtcbiAgICAgICAgICAgICAgICAgdGhpcy5ocERhbWFnZSA9IDEwO1xuICAgICAgICAgICAgICAgICB0aGlzLmltYWdlLnNyYyA9ICcuLi9tZWRpYS9pbWFnZXMvZW5lbWllcy9zdHVkZW50LXJlZC5zdmcnXG4gICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgIGNhc2UgJ21lZ2EtYm9zcyc6XG4gICAgICAgICAgICAgICAgIHRoaXMuY2FzaCA9IDA7XG4gICAgICAgICAgICAgICAgIHRoaXMuc3BlZWQgPSAxMzAwO1xuICAgICAgICAgICAgICAgICB0aGlzLmhlYWx0aCA9IDEzMDAwO1xuICAgICAgICAgICAgICAgICB0aGlzLmhwRGFtYWdlID0gMTAwO1xuICAgICAgICAgICAgICAgICB0aGlzLmltYWdlLnNyYyA9ICcuLi9tZWRpYS9pbWFnZXMvZW5lbWllcy9zdHVkZW50LXJlZC5zdmcnXG4gICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgfVxuICAgICB9XG4gfVxuXG4gbW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgIEVuZW15XG4gfTsiLCJjb25zdCBfbGV2ZWxzID0gcmVxdWlyZSgnLi9pbmRleCcpXG5pbXBvcnQgJy4vLi4vc3R5bGUtbGFuZGluZy1wYWdlLmNzcydcblxuY29uc29sZS5sb2coJ2xhbmQnKVxuXG5cbi8vIGNvbnN0IHBsYXlCdXR0b24gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncGxheS1idXR0b24nKTtcbi8vIGNvbnN0IHJlYWRtb3JlQnV0dG9uID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3JlYWQtbW9yZS1idXR0b24nKTtcblxuXG4vLyBwbGF5QnV0dG9uLm9uY2xpY2sgPSBmdW5jdGlvbigpIHtcbi8vICAgICBhbGVydCgneW91IGNsaWNrZWQgbWUhJyk7XG4vLyB9XG5cbi8vIHJlYWRtb3JlQnV0dG9uLm9uY2xpY2sgPSBmdW5jdGlvbigpIHtcbi8vICAgICBhbGVydCgneW91IGNsaWNrZWQgbWUhJyk7XG4vLyB9IiwiLypcbi0tLS0tLSBUT0RPIC0tLS0tLS1cbkluIG5vIG9yZGVyLlxuXG4jMSBDaGFuZ2UgYW5pbWF0aW9uIGxpYnJhcnkgdG8gVFdFRU5cblxuIzIgRml4IHRoZSBidWxsZXQgYW5pbWF0aW9uXG4gICAgLSB0d2Vlbi5cbiAgICAtIG1heWJlIGhhdmUgdHJhdmVsIGR1cmF0aW9uIGFzIGEgcHJvcGVydHkgaW4gdHVycmV0XG5cbiMxMCByZW5hbWUgYWxsIHRvIGVpdGhlciB0dXJyZXRzIG9yIHRvd2VycyBmZnMuXG5cbiovXG5cblxuLyogRklYIEJFRk9SRSBKQU1cblxuICAgICogdGV4dCB3aGVuIGV2ZXJ5IGxldmVsIGlzIGNvbXBsZXRlLlxuICAgICogbWF5YmUgZGlzcGxheSBsZXZlbC5cbiAgICAqIHNvbWUgc29ydCBvZiB3aW4gc3RhdGVtZW50LlxuXG4qL1xuXG5pbXBvcnQgJy4vLi4vc3R5bGUuY3NzJ1xuaW1wb3J0IHtcbiAgICBUdXJyZXRcbn0gZnJvbSAnLi90dXJyZXQnXG5cbmNvbnN0IF9sZXZlbHMgPSByZXF1aXJlKCcuL2xldmVscycpXG5jb25zdCBfbWFwID0gcmVxdWlyZSgnLi9tYXAnKVxuY29uc3QgdGlsZV9XQUxMID0gX21hcC5nZXRNYXAoKS50aWxlXG5jb25zdCB0cyA9IE1hdGguZmxvb3Iod2luZG93LmlubmVySGVpZ2h0IC8gMTYpXG5cbmNvbnN0IGNhbnZhcyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdjYW52YXMnKTtcbmxldCBhbmltYXRpb25GcmFtZTtcblxuY29uc3QgdHVycmV0SW5mbyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd0dXJyZXQtaW5mbycpXG5jb25zdCBidXlQbU9uZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd0dXJyZXQtcG0tb25lJylcbmNvbnN0IGJ1eVBtVHdvID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3R1cnJldC1wbS10d28nKVxuY29uc3QgYnV5UG1UaHJlZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd0dXJyZXQtcG0tdGhyZWUnKVxuY29uc3QgYnV5RXNraWwgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgndHVycmV0LWVza2lsJylcbmNvbnN0IGNvbnRleHQgPSBjYW52YXMuZ2V0Q29udGV4dCgnMmQnKTtcbmNhbnZhcy53aWR0aCA9IHdpbmRvdy5pbm5lckhlaWdodCAtIDE2O1xuY2FudmFzLmhlaWdodCA9IHdpbmRvdy5pbm5lckhlaWdodCAtIDE2O1xuXG5sZXQgY2FzaCA9IDEwMDsgLy8gbXB2ZSB0byBzdGF0ZVxubGV0IGxpdmVzID0gNDJcbmNvbnN0IGRvbUNhc2ggPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY2FzaCcpXG5jb25zdCBkb21MaXZlcyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdsaXZlcycpXG5jb25zdCBidG5QbGF5ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3N0YXJ0JylcbmNvbnN0IGRvbUxldmVsID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2xldmVsJylcbmxldCBidXlpbmdUdXJyID0gbnVsbDtcbmxldCBob3ZlcmVkVHVycmV0ID0gbnVsbDtcbmxldCBtb3VzZVBvcyA9IHt9XG5cbmNvbnN0IGJhY2tncm91bmRTb3VuZCA9IG5ldyBBdWRpbyhcIm1lZGlhL3NvdW5kcy9nZXN0dXJlcy53YXZcIilcbmJhY2tncm91bmRTb3VuZC5sb29wID0gdHJ1ZTtcbmxldCBpc2RlYXRoU291bmRwbGF5aW5nID0gZmFsc2U7XG5cbmZ1bmN0aW9uIHN0YXJ0U291bmQoKSB7XG4gICAgYmFja2dyb3VuZFNvdW5kLnBsYXkoKTtcbn1cbmRvbUNhc2guaW5uZXJIVE1MID0gY2FzaDtcbmRvbUxpdmVzLmlubmVySFRNTCA9IGxpdmVzO1xuXG5idG5QbGF5LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgc3RhcnRMZXZlbClcblxuYnV5UG1PbmUuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG4gICAgYnV5TmV3VHVycmV0KCdwbS1vbmUnKVxufSlcbmJ1eVBtVHdvLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuICAgIGJ1eU5ld1R1cnJldCgncG0tdHdvJylcbn0pXG5idXlQbVRocmVlLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuICAgIGJ1eU5ld1R1cnJldCgncG0tdGhyZWUnKVxufSlcbmJ1eUVza2lsLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuICAgIGJ1eU5ld1R1cnJldCgnZXNraWwnKVxufSlcblxud2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlbW92ZScsIGUgPT4ge1xuICAgIGxldCBob3ZlcmVkVHVycmV0cyA9IHN0YXRlLnR1cnJldHMuZmlsdGVyKHQgPT4ge1xuICAgICAgICByZXR1cm4gdC5wb3NpdGlvbi54ID09PSBnZXRUaWxlUG9zKGdldE1vdXNlUG9zKGNhbnZhcywgZSkpLnggJiYgdC5wb3NpdGlvbi55ID09PSBnZXRUaWxlUG9zKGdldE1vdXNlUG9zKGNhbnZhcywgZSkpLnlcbiAgICB9KVxuXG4gICAgaWYgKGhvdmVyZWRUdXJyZXRzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICBob3ZlcmVkVHVycmV0ID0gbnVsbFxuICAgIH0gZWxzZSB7XG4gICAgICAgIGhvdmVyZWRUdXJyZXQgPSBob3ZlcmVkVHVycmV0c1swXVxuICAgIH1cblxufSlcblxubGV0IHN0YXRlID0ge1xuICAgIG1hcDogX21hcC5nZXRNYXAoKS5tYXplLFxuICAgIGVuZW1pZXM6IFtdLFxuICAgIHR1cnJldHM6IFtdLFxuICAgIHRvU3Bhd246IFtdLFxuICAgIGNsb2NrOiAwLFxuICAgIGxldmVsOiAwLFxufTtcblxuZnVuY3Rpb24gYnV5TmV3VHVycmV0KHR5cGUpIHtcblxuICAgIGJ1eWluZ1R1cnIgPSBuZXcgVHVycmV0KDAsIDApXG4gICAgYnV5aW5nVHVyci5sb2FkRnJvbVRlbXBsYXRlKHR5cGUpXG4gICAgbG9hZFN0b3JlSW5mbyhidXlpbmdUdXJyKVxuICAgIHR1cnJldEluZm8uc3R5bGUudmlzaWJpbGl0eSA9ICd2aXNpYmxlJztcbiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignbW91c2Vtb3ZlJywgZXZ0ID0+IHtcbiAgICAgICAgbW91c2VQb3MgPSBnZXRNb3VzZVBvcyhjYW52YXMsIGV2dClcbiAgICB9KVxuICAgIGNhbnZhcy5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgICAgICAgaWYgKGJ1eWluZ1R1cnIgJiYgY2FuUGxhY2VUb3dlcihnZXRUaWxlUG9zKG1vdXNlUG9zKSwgYnV5aW5nVHVycikpIHtcbiAgICAgICAgICAgIHBsYWNlTmV3VG93ZXIoZ2V0VGlsZVBvcyhtb3VzZVBvcykpXG4gICAgICAgICAgICBidXlpbmdUdXJyID0gbnVsbFxuICAgICAgICAgICAgdHVycmV0SW5mby5zdHlsZS52aXNpYmlsaXR5ID0gJ2hpZGRlbic7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBidXlpbmdUdXJyID0gbnVsbFxuICAgICAgICAgICAgdHVycmV0SW5mby5zdHlsZS52aXNpYmlsaXR5ID0gJ2hpZGRlbic7XG4gICAgICAgIH1cbiAgICB9KVxufVxuXG5mdW5jdGlvbiBsb2FkU3RvcmVJbmZvKHR1cnJldCkge1xuICAgIGxldCBzcGVlZCA9ICcnXG4gICAgc3dpdGNoICh0dXJyZXQubmFtZSkge1xuICAgICAgICBjYXNlICdwbS1vbmUnOlxuICAgICAgICAgICAgc3BlZWQgPSAnTm9ybWFsJ1xuICAgICAgICAgICAgYnJlYWtcbiAgICAgICAgY2FzZSAncG0tdHdvJzpcbiAgICAgICAgICAgIHNwZWVkID0gJ0Zhc3QnXG4gICAgICAgICAgICBicmVha1xuICAgICAgICBjYXNlICdwbS10aHJlZSc6XG4gICAgICAgICAgICBzcGVlZCA9ICdTbG93J1xuICAgICAgICAgICAgYnJlYWtcbiAgICAgICAgY2FzZSAnZXNraWwnOlxuICAgICAgICAgICAgc3BlZWQgPSAnVmVyeSBmYXN0J1xuICAgICAgICAgICAgYnJlYWtcblxuICAgIH1cbiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgndHVycmV0LWluZm9fX2RhbWFnZScpLmlubmVySFRNTCA9IGAke3R1cnJldC5kYW1hZ2V9YFxuICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd0dXJyZXQtaW5mb19fc3BlZWQnKS5pbm5lckhUTUwgPSBgJHtzcGVlZH1gXG4gICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3R1cnJldC1pbmZvX19jb3N0JykuaW5uZXJIVE1MID0gYCR7dHVycmV0LmNvc3R9IHhwYFxufVxuXG5mdW5jdGlvbiBzdGFydExldmVsKCkge1xuICAgIGJ0blBsYXkuZGlzYWJsZWQgPSB0cnVlO1xuICAgIGJ0blBsYXkuc3R5bGUub3BhY2l0eSA9IDAuM1xuICAgIHN0YXJ0U291bmQoKTtcblxuICAgIHN0YXRlLmxldmVsKytcbiAgICBsZXQgbmV4dEx2bCA9ICcnO1xuICAgIHN3aXRjaCAoc3RhdGUubGV2ZWwpIHtcbiAgICAgICAgY2FzZSAxOlxuICAgICAgICAgICAgbmV4dEx2bCA9ICdvbmUnXG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSAyOlxuICAgICAgICAgICAgbmV4dEx2bCA9ICd0d28nXG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSAzOlxuICAgICAgICAgICAgbmV4dEx2bCA9ICd0aHJlZSdcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlIDQ6XG4gICAgICAgICAgICBuZXh0THZsID0gJ2ZvdXInXG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSA1OlxuICAgICAgICAgICAgbmV4dEx2bCA9ICdmaXZlJ1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgNjpcbiAgICAgICAgICAgIG5leHRMdmwgPSAnc2l4J1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgNzpcbiAgICAgICAgICAgIG5leHRMdmwgPSAnc2V2ZW4nXG4gICAgICAgICAgICBicmVhaztcbiAgICB9XG5cbiAgICAvL2NoYW5nZSBjb2xvciBvZiBidG4/XG4gICAgZG9tTGV2ZWwuaW5uZXJIVE1MID0gc3RhdGUubGV2ZWw7XG4gICAgc3RhdGUudG9TcGF3biA9IF9sZXZlbHMuZ2V0TGV2ZWxzKClbbmV4dEx2bF0uZW5lbWllc1xuICAgXG59XG5cbmZ1bmN0aW9uIHBsYXllckxvb3NlKCl7XG4gICAgbGV0IHR4dCA9IGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKCdZb3UgTG9zdCcpXG4gICAgbGV0IGgxID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnSDEnKVxuICAgIGgxLmFwcGVuZENoaWxkKHR4dClcbiAgICBoMS5jbGFzc0xpc3QuYWRkKCdiaWctZmF0LXRleHQnKVxuICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoaDEpO1xuICAgIHdpbmRvdy5jYW5jZWxBbmltYXRpb25GcmFtZShhbmltYXRpb25GcmFtZSk7XG4gICAgY29uc29sZS5sb2coYW5pbWF0aW9uRnJhbWUpXG59XG5cbmZ1bmN0aW9uIHdpbigpIHtcbiAgICBsZXQgdHh0ID0gZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoJ1lvdSBXb24nKVxuICAgIGxldCBoMSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ0gxJylcbiAgICBoMS5hcHBlbmRDaGlsZCh0eHQpXG4gICAgaDEuY2xhc3NMaXN0LmFkZCgnYmlnLWZhdC10ZXh0JylcbiAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGgxKTtcbn1cblxuZnVuY3Rpb24gY2FuUGxhY2VUb3dlcihwb3MsIHR1cnJldCkge1xuICAgIHJldHVybiBzdGF0ZS5tYXBbcG9zLnldW3Bvcy54XSA9PT0gMSAmJlxuICAgICAgICAhKHN0YXRlLnR1cnJldHMuc29tZSh0ID0+IHtcbiAgICAgICAgICAgIHJldHVybiB0LnBvc2l0aW9uLnggPT09IHBvcy54ICYmIHQucG9zaXRpb24ueSA9PT0gcG9zLnlcbiAgICAgICAgfSkpICYmIGNhc2ggPj0gdHVycmV0LmNvc3Rcbn1cblxuZnVuY3Rpb24gcGxhY2VOZXdUb3dlcihwb3MpIHtcbiAgICBidXlpbmdUdXJyLnBvc2l0aW9uID0gcG9zXG4gICAgc3RhdGUudHVycmV0cy5wdXNoKGJ1eWluZ1R1cnIpXG4gICAgY2FzaCAtPSBidXlpbmdUdXJyLmNvc3RcbiAgICBkb21DYXNoLmlubmVySFRNTCA9IGNhc2g7XG59XG5cbmZ1bmN0aW9uIGdldE1vdXNlUG9zKGNhbnZhcywgZXZ0KSB7XG4gICAgdmFyIHJlY3QgPSBjYW52YXMuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgeDogZXZ0LmNsaWVudFggLSByZWN0LmxlZnQsXG4gICAgICAgIHk6IGV2dC5jbGllbnRZIC0gcmVjdC50b3BcbiAgICB9O1xufVxuXG5mdW5jdGlvbiBnZXRUdXJyZXRUYXJnZXQodHVycmV0KSB7XG4gICAgbGV0IHRhcmdldCA9IG51bGw7XG4gICAgbGV0IHdpdGhpblJhZGl1cyA9IFtdO1xuICAgIHN0YXRlLmVuZW1pZXMuZm9yRWFjaChlID0+IHtcbiAgICAgICAgbGV0IGRYID0gdHVycmV0LnBvc2l0aW9uLnggLSBlLnBvc2l0aW9uLnhcbiAgICAgICAgbGV0IGRZID0gdHVycmV0LnBvc2l0aW9uLnkgLSBlLnBvc2l0aW9uLnlcbiAgICAgICAgbGV0IGRpc3RhbmNlID0gTWF0aC5zcXJ0KGRYICogZFggKyBkWSAqIGRZKVxuICAgICAgICBpZiAoZGlzdGFuY2UgPD0gdHVycmV0LnJhZGl1cykge1xuICAgICAgICAgICAgd2l0aGluUmFkaXVzLnB1c2goZSlcbiAgICAgICAgICAgIGlmICghdGFyZ2V0KSB7XG4gICAgICAgICAgICAgICAgdGFyZ2V0ID0gZVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGUuc3RlcCA+IHRhcmdldC5zdGVwKSB7XG4gICAgICAgICAgICAgICAgdGFyZ2V0ID0gZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH0pXG5cbiAgICByZXR1cm4gdGFyZ2V0XG59XG5cbmZ1bmN0aW9uIGdldFRpbGVQb3MobVBvcykge1xuICAgIHJldHVybiB7XG4gICAgICAgIHg6IE1hdGguZmxvb3IobVBvcy54IC8gdHMpLFxuICAgICAgICB5OiBNYXRoLmZsb29yKG1Qb3MueSAvIHRzKVxuICAgIH1cbn1cblxuZnVuY3Rpb24gZ2V0U3RhdGUob2xkU3RhdGUpIHtcbiAgICBjb25zdCBzdGF0ZSA9IHtcbiAgICAgICAgLi4ub2xkU3RhdGVcbiAgICB9O1xuXG4gICAgaWYoY2FzaCA+PSAxMDAwKXtcbiAgICAgICAgYnV5UG1PbmUuc3R5bGUub3BhY2l0eSA9IDFcbiAgICAgICAgYnV5UG1Ud28uc3R5bGUub3BhY2l0eSA9IDFcbiAgICAgICAgYnV5UG1UaHJlZS5zdHlsZS5vcGFjaXR5ID0gMVxuICAgICAgICBidXlFc2tpbC5zdHlsZS5vcGFjaXR5ID0gMVxuICAgIH0gZWxzZSBpZihjYXNoID49IDIwMCl7XG4gICAgICAgIGJ1eVBtT25lLnN0eWxlLm9wYWNpdHkgPSAxXG4gICAgICAgIGJ1eVBtVHdvLnN0eWxlLm9wYWNpdHkgPSAxXG4gICAgICAgIGJ1eVBtVGhyZWUuc3R5bGUub3BhY2l0eSA9IDFcbiAgICAgICAgYnV5RXNraWwuc3R5bGUub3BhY2l0eSA9IDAuM1xuICAgIH0gZWxzZSBpZihjYXNoID49IDE1MCl7XG4gICAgICAgIGJ1eVBtT25lLnN0eWxlLm9wYWNpdHkgPSAxXG4gICAgICAgIGJ1eVBtVHdvLnN0eWxlLm9wYWNpdHkgPSAxXG4gICAgICAgIGJ1eVBtVGhyZWUuc3R5bGUub3BhY2l0eSA9IDAuM1xuICAgICAgICBidXlFc2tpbC5zdHlsZS5vcGFjaXR5ID0gMC4zXG4gICAgfSBlbHNlIGlmKGNhc2ggPj0gMTAwKXtcbiAgICAgICAgYnV5UG1PbmUuc3R5bGUub3BhY2l0eSA9IDFcbiAgICAgICAgYnV5UG1Ud28uc3R5bGUub3BhY2l0eSA9IDAuM1xuICAgICAgICBidXlQbVRocmVlLnN0eWxlLm9wYWNpdHkgPSAwLjNcbiAgICAgICAgYnV5RXNraWwuc3R5bGUub3BhY2l0eSA9IDAuM1xuICAgIH0gZWxzZXtcbiAgICAgICAgYnV5UG1PbmUuc3R5bGUub3BhY2l0eSA9IDAuM1xuICAgICAgICBidXlQbVR3by5zdHlsZS5vcGFjaXR5ID0gMC4zXG4gICAgICAgIGJ1eVBtVGhyZWUuc3R5bGUub3BhY2l0eSA9IDAuM1xuICAgICAgICBidXlFc2tpbC5zdHlsZS5vcGFjaXR5ID0gMC4zXG4gICAgfVxuXG4gICAgc3RhdGUudG9TcGF3bi5mb3JFYWNoKGUgPT4ge1xuICAgICAgICBpZiAoZS5zcGF3blRpbWVyID4gZS5zcGF3bkZyZXF1ZW5jeSkge1xuICAgICAgICAgICAgaWYgKGUudG9TcGF3bi5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICAgICAgc3RhdGUuZW5lbWllcy5wdXNoKFxuICAgICAgICAgICAgICAgICAgICBlLnRvU3Bhd24ucG9wKClcbiAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgIGUuc3Bhd25UaW1lciA9IDA7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBlLnNwYXduVGltZXIgKz0gd2luZG93LnBlcmZvcm1hbmNlLm5vdygpIC0gc3RhdGUuY2xvY2s7XG4gICAgICAgIH1cbiAgICB9KVxuXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBzdGF0ZS5lbmVtaWVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGNvbnN0IGVuZW15ID0gc3RhdGUuZW5lbWllc1tpXTtcblxuXG4gICAgICAgIGlmIChlbmVteS5tb3ZlVGltZXIgPiBlbmVteS5zcGVlZCkge1xuICAgICAgICAgICAgZW5lbXkuc3RlcCsrXG4gICAgICAgICAgICBpZiAoZW5lbXkuc3RlcCA8IGVuZW15LnBhdGgubGVuZ3RoIC0gMSkge1xuICAgICAgICAgICAgICAgIGxldCBkeCA9IGVuZW15LnBhdGhbZW5lbXkuc3RlcF0ueCAtIGVuZW15LnBvc2l0aW9uLnhcbiAgICAgICAgICAgICAgICBsZXQgZHkgPSBlbmVteS5wYXRoW2VuZW15LnN0ZXBdLnkgLSBlbmVteS5wb3NpdGlvbi55XG5cbiAgICAgICAgICAgICAgICAvKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gIzEgKi9cbiAgICAgICAgICAgICAgICBhbmltZSh7XG4gICAgICAgICAgICAgICAgICAgIHRhcmdldHM6IGVuZW15LnBvc2l0aW9uLFxuICAgICAgICAgICAgICAgICAgICB4OiBlbmVteS5wb3NpdGlvbi54ICsgZHgsXG4gICAgICAgICAgICAgICAgICAgIHk6IGVuZW15LnBvc2l0aW9uLnkgKyBkeSxcbiAgICAgICAgICAgICAgICAgICAgZHVyYXRpb246IGVuZW15LnNwZWVkIC0gMSxcbiAgICAgICAgICAgICAgICAgICAgZWFzaW5nOiAnbGluZWFyJyxcbiAgICAgICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgICAgIGVuZW15Lm1vdmVUaW1lciA9IDA7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIGxpdmVzIC09IGVuZW15LmhwRGFtYWdlO1xuICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgZW5lbXkuaXNBbGl2ZSA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIGlmKGxpdmVzIDw9IDApIHtcbiAgICAgICAgICAgICAgICAgICAgcGxheWVyTG9vc2UoKTtcbiAgICAgICAgICAgICAgICAgICAgbGl2ZXMgID0gMFxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBkb21MaXZlcy5pbm5lckhUTUwgPSBsaXZlcztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGVuZW15Lm1vdmVUaW1lciArPSB3aW5kb3cucGVyZm9ybWFuY2Uubm93KCkgLSBzdGF0ZS5jbG9jaztcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHN0YXRlLmVuZW1pZXMgPSBzdGF0ZS5lbmVtaWVzLmZpbHRlcihlID0+IGUuaXNBbGl2ZSlcblxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgc3RhdGUudHVycmV0cy5sZW5ndGg7IGkrKykge1xuICAgICAgICBjb25zdCB0dXJyZXQgPSBzdGF0ZS50dXJyZXRzW2ldO1xuXG4gICAgICAgIC8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAjOCAqL1xuICAgICAgICBpZiAoc3RhdGUuZW5lbWllcy5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICB0dXJyZXQudGFyZ2V0ID0gZ2V0VHVycmV0VGFyZ2V0KHR1cnJldCk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHR1cnJldC50YXJnZXQgJiYgIXR1cnJldC50YXJnZXQuaXNBbGl2ZSkge1xuICAgICAgICAgICAgdHVycmV0LnRhcmdldCA9IG51bGxcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICh0dXJyZXQuc2hvb3RUaW1lciA+IHR1cnJldC5zcGVlZCAmJiB0dXJyZXQudGFyZ2V0KSB7XG5cbiAgICAgICAgICAgIHR1cnJldC50YXJnZXQuaXNIaXQgPSB0cnVlO1xuICAgICAgICAgICAgdHVycmV0LmZpcmVkID0gdHJ1ZVxuXG5cbiAgICAgICAgICAgIHR1cnJldC5idWxsZXQudGFyZ2V0ID0ge1xuICAgICAgICAgICAgICAgIC4uLnR1cnJldC50YXJnZXQucG9zaXRpb25cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICMxICovXG4gICAgICAgICAgICAvKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gIzIgKi9cbiAgICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgICAgIHR1cnJldC50YXJnZXQuaGVhbHRoIC09IHR1cnJldC5kYW1hZ2U7XG4gICAgICAgICAgICAgICAgdHVycmV0LmZpcmVkID0gZmFsc2VcblxuXG5cbiAgICAgICAgICAgICAgICBpZiAodHVycmV0LnRhcmdldC5oZWFsdGggPD0gMCkge1xuICAgICAgICAgICAgICAgICAgICB0dXJyZXQudGFyZ2V0LmlzQWxpdmUgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKCFpc2RlYXRoU291bmRwbGF5aW5nKSB7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIHR1cnJldC50YXJnZXQuZGVhdGhTb3VuZC5wbGF5KClcbiAgICAgICAgICAgICAgICAgICAgICAgIGlzZGVhdGhTb3VuZHBsYXlpbmcgPSB0cnVlO1xuICAgICAgICAgICAgICAgICAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaXNkZWF0aFNvdW5kcGxheWluZyA9IGZhbHNlO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSwgMjAwMCk7XG4gICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICBjYXNoICs9IHR1cnJldC50YXJnZXQuY2FzaFxuICAgICAgICAgICAgICAgICAgICBkb21DYXNoLmlubmVySFRNTCA9IGNhc2hcbiAgICAgICAgICAgICAgICAgICAgdHVycmV0LnRhcmdldCA9IG51bGxcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LCB0dXJyZXQuYnVsbGV0LnRyYXZlbFNwZWVkKVxuICAgICAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgICAgICAgdHVycmV0LmJ1bGxldC5wb3NpdGlvbiA9IHtcbiAgICAgICAgICAgICAgICAgICAgLi4udHVycmV0LnBvc2l0aW9uXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHR1cnJldC5idWxsZXQudGFyZ2V0ID0gbnVsbFxuICAgICAgICAgICAgfSwgdHVycmV0LmJ1bGxldC50cmF2ZWxTcGVlZCArIDEwMClcblxuXG4gICAgICAgICAgICB0dXJyZXQuc2hvb3RUaW1lciA9IDA7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0dXJyZXQuc2hvb3RUaW1lciArPSB3aW5kb3cucGVyZm9ybWFuY2Uubm93KCkgLSBzdGF0ZS5jbG9jaztcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHN0YXRlLmVuZW1pZXMgPSBzdGF0ZS5lbmVtaWVzLmZpbHRlcihlID0+IGUuaXNBbGl2ZSlcbiAgICBcbiAgICBpZiAoIXN0YXRlLmVuZW1pZXMubGVuZ3RoKSB7XG4gICAgICAgIGlmKHN0YXRlLmxldmVsID09PSAnc2V2ZW4nKXtcbiAgICAgICAgICAgd2luKCk7XG4gICAgICAgIH1cbiAgICAgICAgYnRuUGxheS5kaXNhYmxlZCA9IGZhbHNlXG4gICAgICAgIGJ0blBsYXkuc3R5bGUub3BhY2l0eSA9IDFcbiAgICB9XG4gICAgc3RhdGUuY2xvY2sgPSB3aW5kb3cucGVyZm9ybWFuY2Uubm93KCk7XG5cbiAgICByZXR1cm4gc3RhdGU7XG59XG5cbmZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICBjb25zdCBvbGRTdGF0ZSA9IHN0YXRlO1xuICAgIHN0YXRlID0gZ2V0U3RhdGUoc3RhdGUpO1xuXG4gICAgY29udGV4dC5jbGVhclJlY3QoMCwgMCwgY2FudmFzLndpZHRoLCBjYW52YXMuaGVpZ2h0KTtcblxuXG4gICAgc3RhdGUubWFwLmZvckVhY2goKHJvdywgeSkgPT4ge1xuICAgICAgICByb3cuZm9yRWFjaCgodGlsZSwgeCkgPT4ge1xuICAgICAgICAgICAgc3dpdGNoICh0aWxlKSB7XG4gICAgICAgICAgICAgICAgY2FzZSAwOlxuICAgICAgICAgICAgICAgICAgICBjb250ZXh0LmZpbGxTdHlsZSA9ICdyZ2JhKDAsMCwwLDApJ1xuICAgICAgICAgICAgICAgICAgICBjb250ZXh0LmZpbGxSZWN0KHggKiB0cywgeSAqIHRzLCB0cywgdHMpO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlIDE6XG5cbiAgICAgICAgICAgICAgICAgICAgY29udGV4dC5kcmF3SW1hZ2UodGlsZV9XQUxMLCB4ICogdHMsIHkgKiB0cywgdHMsIHRzKTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSAyOlxuICAgICAgICAgICAgICAgICAgICBjb250ZXh0LmZpbGxTdHlsZSA9ICdzYWxtb24nXG4gICAgICAgICAgICAgICAgICAgIGNvbnRleHQuZmlsbFJlY3QoeCAqIHRzLCB5ICogdHMsIHRzLCB0cyk7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgIH0pXG4gICAgfSk7XG5cbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHN0YXRlLmVuZW1pZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgY29uc3QgZW5lbXkgPSBzdGF0ZS5lbmVtaWVzW2ldO1xuICAgICAgICBjb250ZXh0LmRyYXdJbWFnZShlbmVteS5pbWFnZSwgZW5lbXkucG9zaXRpb24ueCAqIHRzLCBlbmVteS5wb3NpdGlvbi55ICogdHMsIHRzLCB0cyk7XG4gICAgICAgIC8vIGNvbnRleHQuZmlsbFN0eWxlID0gJ3NhbG1vbidcbiAgICAgICAgLy8gY29udGV4dC5maWxsUmVjdChlbmVteS5wb3NpdGlvbi54ICogdHMgKyB0cy8yLCBlbmVteS5wb3NpdGlvbi55ICogdHMgKyB0cywgdHMvMiwgNSlcbiAgICB9XG5cblxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgc3RhdGUudHVycmV0cy5sZW5ndGg7IGkrKykge1xuICAgICAgICBjb25zdCB0dXJyZXQgPSBzdGF0ZS50dXJyZXRzW2ldO1xuICAgICAgICBjb250ZXh0LmRyYXdJbWFnZSh0dXJyZXQuaW1hZ2UsIHR1cnJldC5wb3NpdGlvbi54ICogdHMgKyAzLCB0dXJyZXQucG9zaXRpb24ueSAqIHRzICsgMywgdHMgKiAwLjksIHRzICogMC45KTtcblxuXG4gICAgICAgIC8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAjMiAqL1xuICAgICAgICAvLyBpZiAodHVycmV0LmZpcmVkKSB7XG5cbiAgICAgICAgaWYgKHR1cnJldC5idWxsZXQudGFyZ2V0KSB7XG4gICAgICAgICAgICBjb250ZXh0LmRyYXdJbWFnZSh0dXJyZXQuYnVsbGV0LCB0dXJyZXQuYnVsbGV0LnBvc2l0aW9uLnggKiB0cywgdHVycmV0LmJ1bGxldC5wb3NpdGlvbi55ICogdHMsIHRzICogMC41LCB0cyAqIDAuNSk7XG4gICAgICAgICAgICBhbmltZSh7XG4gICAgICAgICAgICAgICAgdGFyZ2V0czogdHVycmV0LmJ1bGxldC5wb3NpdGlvbixcbiAgICAgICAgICAgICAgICB4OiB0dXJyZXQuYnVsbGV0LnRhcmdldC54LFxuICAgICAgICAgICAgICAgIHk6IHR1cnJldC5idWxsZXQudGFyZ2V0LnksXG4gICAgICAgICAgICAgICAgZHVyYXRpb246IHR1cnJldC5idWxsZXQudHJhdmVsU3BlZWQgLSAxMzAsXG4gICAgICAgICAgICAgICAgZWFzaW5nOiAnbGluZWFyJyxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgfVxuICAgIC8vIH1cbiAgICBpZiAoaG92ZXJlZFR1cnJldCkge1xuICAgICAgICBjb250ZXh0LmJlZ2luUGF0aCgpO1xuICAgICAgICBjb250ZXh0LmZpbGxTdHlsZSA9IFwiIzAwMDAwMDQ0XCI7XG4gICAgICAgIGNvbnRleHQuYXJjKGhvdmVyZWRUdXJyZXQucG9zaXRpb24ueCAqIHRzICsgdHMgLyAyLCBob3ZlcmVkVHVycmV0LnBvc2l0aW9uLnkgKiB0cyArIHRzIC8gMiwgaG92ZXJlZFR1cnJldC5yYWRpdXMgKiB0cywgMCwgMiAqIE1hdGguUEkpO1xuICAgICAgICBjb250ZXh0LmZpbGwoKTtcbiAgICB9XG4gICAgaWYgKGJ1eWluZ1R1cnIpIHtcbiAgICAgICAgY29udGV4dC5iZWdpblBhdGgoKTtcbiAgICAgICAgY29udGV4dC5maWxsU3R5bGUgPSBcIiMwMDAwMDA0NFwiO1xuICAgICAgICBjb250ZXh0LmFyYyhtb3VzZVBvcy54LCBtb3VzZVBvcy55LCBidXlpbmdUdXJyLnJhZGl1cyAqIHRzLCAwLCAyICogTWF0aC5QSSk7XG4gICAgICAgIGNvbnRleHQuZmlsbCgpO1xuICAgICAgICAvLyBjb250ZXh0LmZpbGxSZWN0KCAtIDIwMCwgIC0gMjAwLCAsIDQwMCk7XG4gICAgfVxuICAgIGFuaW1hdGlvbkZyYW1lID0gd2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZShyZW5kZXIpO1xufVxuXG5yZW5kZXIoKTsiLCJpbXBvcnQge1xuICAgIEVuZW15XG59IGZyb20gJy4vZW5lbXknXG5cbmxldCBfbWFwID0gcmVxdWlyZSgnLi9tYXAnKVxubGV0IHBhdGggPSBfbWFwLmdldEFzdGFyUGF0aCgpXG5cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAjMyAqL1xubGV0IGxldmVscyA9IHtcbiAgICBvbmU6IHtcbiAgICAgICAgZW5lbWllczogW3tcbiAgICAgICAgICAgIHR5cGU6ICd3ZWFrJyxcbiAgICAgICAgICAgIHNwYXduRnJlcXVlbmN5OiAxODAwLFxuICAgICAgICAgICAgc3Bhd25UaW1lcjogMTAwMCxcbiAgICAgICAgICAgIC8vQ0hBTkdFIEFNUFVUXG4gICAgICAgICAgICB0b1NwYXduOiBsb2FkKCd3ZWFrJywgMjApXG5cbiAgICAgICAgfV0sXG4gICAgICAgIHJld2FyZDogNTBcbiAgICB9LFxuICAgIHR3bzoge1xuICAgICAgICBlbmVtaWVzOiBbe1xuICAgICAgICAgICAgICAgIHR5cGU6ICd3ZWFrJyxcbiAgICAgICAgICAgICAgICBzcGF3bkZyZXF1ZW5jeTogMjAwMCxcbiAgICAgICAgICAgICAgICBzcGF3blRpbWVyOiAwLFxuICAgICAgICAgICAgICAgIHRvU3Bhd246IGxvYWQoJ3dlYWsnLCAyMClcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgdHlwZTogJ21lZGl1bScsXG4gICAgICAgICAgICAgICAgc3Bhd25GcmVxdWVuY3k6IDMwMDAsXG4gICAgICAgICAgICAgICAgc3Bhd25UaW1lcjogLTUwMDAsXG4gICAgICAgICAgICAgICAgdG9TcGF3bjogbG9hZCgnbWVkaXVtJywgMTUpXG4gICAgICAgICAgICB9XG4gICAgICAgIF1cbiAgICB9LFxuICAgIHRocmVlOiB7XG4gICAgICAgIGVuZW1pZXM6IFt7XG4gICAgICAgICAgICAgICAgdHlwZTogJ3dlYWsnLFxuICAgICAgICAgICAgICAgIHNwYXduRnJlcXVlbmN5OiAyMDAwLFxuICAgICAgICAgICAgICAgIHNwYXduVGltZXI6IC0zMDAwLFxuICAgICAgICAgICAgICAgIHRvU3Bhd246IGxvYWQoJ3dlYWsnLCAyMClcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgdHlwZTogJ21lZGl1bScsXG4gICAgICAgICAgICAgICAgc3Bhd25GcmVxdWVuY3k6IDIwMDAsXG4gICAgICAgICAgICAgICAgc3Bhd25UaW1lcjogMTAwMCxcbiAgICAgICAgICAgICAgICB0b1NwYXduOiBsb2FkKCdtZWRpdW0nLCAzNSlcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgdHlwZTogJ2hhcmQnLFxuICAgICAgICAgICAgICAgIHNwYXduRnJlcXVlbmN5OiAyNTAwLFxuICAgICAgICAgICAgICAgIHNwYXduVGltZXI6IC0xMDAwMCxcbiAgICAgICAgICAgICAgICB0b1NwYXduOiBsb2FkKCdoYXJkJywgMjApXG4gICAgICAgICAgICB9XG4gICAgICAgIF1cbiAgICB9LFxuICAgIGZvdXI6IHtcbiAgICAgICAgZW5lbWllczogW3tcbiAgICAgICAgICAgICAgICB0eXBlOiAnd2VhaycsXG4gICAgICAgICAgICAgICAgc3Bhd25GcmVxdWVuY3k6IDEwMDAsXG4gICAgICAgICAgICAgICAgc3Bhd25UaW1lcjogLTI1MDAwLFxuICAgICAgICAgICAgICAgIHRvU3Bhd246IGxvYWQoJ3dlYWsnLCAxMClcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgdHlwZTogJ21lZGl1bScsXG4gICAgICAgICAgICAgICAgc3Bhd25GcmVxdWVuY3k6IDUwMDAsXG4gICAgICAgICAgICAgICAgc3Bhd25UaW1lcjogMTAwMCxcbiAgICAgICAgICAgICAgICB0b1NwYXduOiBsb2FkKCdtZWRpdW0nLCA4KVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICB0eXBlOiAnbWVkaXVtJyxcbiAgICAgICAgICAgICAgICBzcGF3bkZyZXF1ZW5jeTogMzAwLFxuICAgICAgICAgICAgICAgIHNwYXduVGltZXI6IC0xNTAwLFxuICAgICAgICAgICAgICAgIHRvU3Bhd246IGxvYWQoJ21lZGl1bScsIDEwKVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICB0eXBlOiAnaGFyZCcsXG4gICAgICAgICAgICAgICAgc3Bhd25GcmVxdWVuY3k6IDIwMDAsXG4gICAgICAgICAgICAgICAgc3Bhd25UaW1lcjogMTAwMCxcbiAgICAgICAgICAgICAgICB0b1NwYXduOiBsb2FkKCdoYXJkJywgMjApXG4gICAgICAgICAgICB9XG4gICAgICAgIF1cbiAgICB9LFxuICAgIGZvdXI6IHtcbiAgICAgICAgZW5lbWllczogW3tcbiAgICAgICAgICAgICAgICB0eXBlOiAnd2VhaycsXG4gICAgICAgICAgICAgICAgc3Bhd25GcmVxdWVuY3k6IDEwMCxcbiAgICAgICAgICAgICAgICBzcGF3blRpbWVyOiAwLFxuICAgICAgICAgICAgICAgIHRvU3Bhd246IGxvYWQoJ3dlYWsnLCA1MClcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgdHlwZTogJ3dlYWsnLFxuICAgICAgICAgICAgICAgIHNwYXduRnJlcXVlbmN5OiAxMDAsXG4gICAgICAgICAgICAgICAgc3Bhd25UaW1lcjogLTgwMDAsXG4gICAgICAgICAgICAgICAgdG9TcGF3bjogbG9hZCgnd2VhaycsIDUwKVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICB0eXBlOiAnd2VhaycsXG4gICAgICAgICAgICAgICAgc3Bhd25GcmVxdWVuY3k6IDEwMCxcbiAgICAgICAgICAgICAgICBzcGF3blRpbWVyOiAtMTYwMDAsXG4gICAgICAgICAgICAgICAgdG9TcGF3bjogbG9hZCgnd2VhaycsIDUwKVxuICAgICAgICAgICAgfSxcblxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHR5cGU6ICd3ZWFrJyxcbiAgICAgICAgICAgICAgICBzcGF3bkZyZXF1ZW5jeTogMTAwLFxuICAgICAgICAgICAgICAgIHNwYXduVGltZXI6IC0yMTAwMCxcbiAgICAgICAgICAgICAgICB0b1NwYXduOiBsb2FkKCd3ZWFrJywgNTApXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHR5cGU6ICdtZWRpdW0nLFxuICAgICAgICAgICAgICAgIHNwYXduRnJlcXVlbmN5OiAyMDAwLFxuICAgICAgICAgICAgICAgIHNwYXduVGltZXI6IDEwMDAsXG4gICAgICAgICAgICAgICAgdG9TcGF3bjogbG9hZCgnbWVkaXVtJywgMzApXG4gICAgICAgICAgICB9XG4gICAgICAgIF1cbiAgICB9LFxuICAgIGZpdmU6IHtcbiAgICAgICAgZW5lbWllczogW3tcbiAgICAgICAgICAgICAgICBzcGF3bkZyZXF1ZW5jeTogNTAwLFxuICAgICAgICAgICAgICAgIHNwYXduVGltZXI6IC02MDAwLFxuICAgICAgICAgICAgICAgIHRvU3Bhd246IGxvYWQoJ21lZGl1bScsIDQwKVxuICAgICAgICAgICAgfSxcblxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHNwYXduRnJlcXVlbmN5OiAxMDAwLFxuICAgICAgICAgICAgICAgIHNwYXduVGltZXI6IC0xMDAwLFxuICAgICAgICAgICAgICAgIHRvU3Bhd246IGxvYWQoJ2ZseScsIDQwKVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIFxuXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgc3Bhd25GcmVxdWVuY3k6IDEwMDAsXG4gICAgICAgICAgICAgICAgc3Bhd25UaW1lcjogLTE1MDAwLFxuICAgICAgICAgICAgICAgIHRvU3Bhd246IGxvYWQoJ2ZseScsIDQwKVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBzcGF3bkZyZXF1ZW5jeTogMjUwMCxcbiAgICAgICAgICAgICAgICBzcGF3blRpbWVyOiAxMDAwLFxuICAgICAgICAgICAgICAgIHRvU3Bhd246IGxvYWQoJ2hhcmQnLCA0MClcbiAgICAgICAgICAgIH1cbiAgICAgICAgXVxuICAgIH0sXG4gICAgc2l4OiB7XG4gICAgICAgIGVuZW1pZXM6IFt7XG4gICAgICAgICAgICAgICAgc3Bhd25GcmVxdWVuY3k6IDE1MDAsXG4gICAgICAgICAgICAgICAgc3Bhd25UaW1lcjogMjQwMCxcbiAgICAgICAgICAgICAgICB0b1NwYXduOiBsb2FkKCdmbHknLCA1MClcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgc3Bhd25GcmVxdWVuY3k6IDUwMDAsXG4gICAgICAgICAgICAgICAgc3Bhd25UaW1lcjogMTAwMCxcbiAgICAgICAgICAgICAgICB0b1NwYXduOiBsb2FkKCdib3NzJywgMjApXG4gICAgICAgICAgICB9XG4gICAgICAgIF1cbiAgICB9LFxuICAgIHNldmVuOiB7XG4gICAgICAgIGVuZW1pZXM6IFt7XG4gICAgICAgICAgICBzcGF3bkZyZXF1ZW5jeTogMTAwMCxcbiAgICAgICAgICAgIHNwYXduVGltZXI6IDAsXG4gICAgICAgICAgICB0b1NwYXduOiBsb2FkKCdtZWdhLWJvc3MnLCAxKVxuICAgICAgICB9XVxuICAgIH1cbn1cblxuZnVuY3Rpb24gbG9hZCh0eXBlLCBhbW91bnQpIHtcbiAgICBsZXQgZW5lbWllcyA9IFtdXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBhbW91bnQ7IGkrKykge1xuICAgICAgICBsZXQgZW5lbXkgPSBuZXcgRW5lbXkoMSwgMSwgcGF0aClcbiAgICAgICAgZW5lbXkubG9hZEZyb21UZW1wbGF0ZSh0eXBlKVxuICAgICAgICBlbmVtaWVzLnB1c2goZW5lbXkpXG4gICAgfVxuICAgIHJldHVybiBlbmVtaWVzXG5cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldExldmVscygpIHtcbiAgICByZXR1cm4gbGV2ZWxzXG59IiwiLy8gU0hPVVQgT1VUIFRPIEVTS0lMXG5cbmZ1bmN0aW9uIGhldXJpc3RpYyhhLCBiKSB7XG4gIHJldHVybiBNYXRoLmFicyhhLnggLSBiLngpICsgTWF0aC5hYnMoYS55IC0gYi55KTtcbn1cblxuZnVuY3Rpb24gbm9kZUlzRXF1YWwoYSwgYikge1xuICByZXR1cm4gYS54ID09PSBiLnggJiYgYS55ID09PSBiLnk7XG59XG5cbmZ1bmN0aW9uIGZpbmROb2RlKG5vZGVMaXN0LCBub2RlKSB7XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgbm9kZUxpc3QubGVuZ3RoOyBpKyspIHtcbiAgICBpZiAobm9kZUlzRXF1YWwobm9kZSwgbm9kZUxpc3RbaV0pKSB7XG4gICAgICByZXR1cm4gbm9kZTtcbiAgICB9XG4gIH1cbn1cblxuZnVuY3Rpb24gY29udmVydE1hemUobWF6ZSkge1xuICByZXR1cm4gbWF6ZS5tYXAoKHJvdywgeSkgPT4ge1xuICAgIHJldHVybiByb3cubWFwKChpc1dhbGwsIHgpID0+IHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHgsXG4gICAgICAgIHksXG4gICAgICAgIGlzV2FsbFxuICAgICAgfTtcbiAgICB9KTtcbiAgfSk7XG59XG5cbmZ1bmN0aW9uIGdldE5laWdoYm91cnMobWFwLCBub2RlKSB7XG4gIGNvbnN0IG5laWdoYm91cnMgPSBbXTtcbiAgLy8gQWJvdmVcbiAgaWYgKG1hcFtub2RlLnkgLSAxXVtub2RlLnhdKSB7XG4gICAgbmVpZ2hib3Vycy5wdXNoKG1hcFtub2RlLnkgLSAxXVtub2RlLnhdKTtcbiAgfVxuICAvLyBCZWxvd1xuICBpZiAobWFwW25vZGUueSArIDFdW25vZGUueF0pIHtcbiAgICBuZWlnaGJvdXJzLnB1c2gobWFwW25vZGUueSArIDFdW25vZGUueF0pO1xuICB9XG4gIC8vIFJpZ2h0XG4gIGlmIChtYXBbbm9kZS55XVtub2RlLnggLSAxXSkge1xuICAgIG5laWdoYm91cnMucHVzaChtYXBbbm9kZS55XVtub2RlLnggLSAxXSk7XG4gIH1cbiAgLy8gUmlnaHRcbiAgaWYgKG1hcFtub2RlLnldW25vZGUueCArIDFdKSB7XG4gICAgbmVpZ2hib3Vycy5wdXNoKG1hcFtub2RlLnldW25vZGUueCArIDFdKTtcbiAgfVxuXG4gIHJldHVybiBuZWlnaGJvdXJzO1xufVxuXG5mdW5jdGlvbiBnZXRQYXRoKG1hemUsIHN0YXJ0LCBnb2FsKSB7XG4gIC8vIEluaXRpYWxpemUgdGhlIGxpc3RzXG4gIG1hemUgPSBjb252ZXJ0TWF6ZShtYXplKTtcbiAgY29uc3Qgb3BlbiA9IFtdO1xuICBjb25zdCBjbG9zZWQgPSBbXTtcbiAgb3Blbi5wdXNoKHN0YXJ0KTtcblxuICB3aGlsZSAob3Blbi5sZW5ndGgpIHtcbiAgICAvLyBGaW5kIHRoZSBsb3dlc3Qgb3BlbiBub2RlIGFuZCBhc3NpZ24gaXQgdG8gY3VycmVudFxuICAgIGxldCBjdXJyZW50SW5kZXggPSAwO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgb3Blbi5sZW5ndGg7IGkrKykge1xuICAgICAgaWYgKG9wZW5baV0uZiA8IG9wZW5bY3VycmVudEluZGV4XS5mKSB7XG4gICAgICAgIGN1cnJlbnRJbmRleCA9IGk7XG4gICAgICB9XG4gICAgfVxuICAgIGxldCBjdXJyZW50ID0gb3BlbltjdXJyZW50SW5kZXhdO1xuXG4gICAgLy8gSWYgd2UgaGF2ZSByZWFjaGVkIHRoZSBnb2FsIGJhY2t0cmFjayBhbmQgcmV0dXJuIHJldmVyc2VkIHBhdGhcbiAgICBpZiAobm9kZUlzRXF1YWwoY3VycmVudCwgZ29hbCkpIHtcbiAgICAgIGNvbnN0IHBhdGggPSBbXTtcbiAgICAgIGxldCBjdXJyID0gY3VycmVudDtcbiAgICAgIHdoaWxlIChjdXJyLnBhcmVudCkge1xuICAgICAgICBwYXRoLnB1c2goY3Vycik7XG4gICAgICAgIGN1cnIgPSBjdXJyLnBhcmVudDtcbiAgICAgIH1cbiAgICAgIHJldHVybiBwYXRoLnJldmVyc2UoKTtcbiAgICB9XG5cbiAgICAvLyBQdXQgY3VycmVudCBub2RlIGluIGNsb3NlZCBsaXN0XG4gICAgb3Blbi5zcGxpY2UoY3VycmVudEluZGV4LCAxKTtcbiAgICBjbG9zZWQucHVzaChjdXJyZW50KTtcblxuICAgIGxldCBuZWlnaGJvdXJzID0gZ2V0TmVpZ2hib3VycyhtYXplLCBjdXJyZW50KTtcbiAgICBsZXQgZ1Njb3JlID0gY3VycmVudC5nICsgMTtcblxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbmVpZ2hib3Vycy5sZW5ndGg7IGkrKykge1xuICAgICAgbGV0IG5laWdoYm91ciA9IG5laWdoYm91cnNbaV07XG4gICAgICBsZXQgaXNDbG9zZWQgPSBmaW5kTm9kZShjbG9zZWQsIG5laWdoYm91cik7XG4gICAgICBpZiAobmVpZ2hib3VyLmlzV2FsbCB8fCBpc0Nsb3NlZCkge1xuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cblxuICAgICAgbGV0IGdTY29yZUlzQmVzdCA9IGZhbHNlO1xuXG4gICAgICBpZiAoIWZpbmROb2RlKG9wZW4sIG5laWdoYm91cikpIHtcbiAgICAgICAgZ1Njb3JlSXNCZXN0ID0gdHJ1ZTtcbiAgICAgICAgbmVpZ2hib3VyLmggPSBoZXVyaXN0aWMobmVpZ2hib3VyLCBnb2FsKTtcbiAgICAgICAgb3Blbi5wdXNoKG5laWdoYm91cik7XG4gICAgICB9XG4gICAgICBpZiAoZ1Njb3JlIDwgbmVpZ2hib3VyLmcpIHtcbiAgICAgICAgZ1Njb3JlSXNCZXN0ID0gdHJ1ZTtcbiAgICAgIH1cblxuICAgICAgaWYgKGdTY29yZUlzQmVzdCkge1xuICAgICAgICBuZWlnaGJvdXIucGFyZW50ID0gY3VycmVudDtcbiAgICAgICAgbmVpZ2hib3VyLmcgPSBnU2NvcmU7XG4gICAgICAgIG5laWdoYm91ci5mID0gbmVpZ2hib3VyLmcgKyBuZWlnaGJvdXIuaDtcbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgcmV0dXJuIFtdO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgZ2V0UGF0aDogZ2V0UGF0aFxufTtcbiJdLCJzb3VyY2VSb290IjoiIn0=